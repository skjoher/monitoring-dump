var crit = 1000
var period = 10s
var every = 20s

// Dataframe
stream
  |from()
    .database('jmx_db')
    .retentionPolicy('autogen')
    .measurement('threads')
    .groupBy('hostname')
  |window()
    .period(period)
    .every(every)
  |default()
    .field('ThreadCount', 0)
// Alert
  |alert()
    .id('{{ .Name }}:{{ index .Tags "hostname"}}/_threads')
    // Email subject
    .message('{{ .ID }} stat {{ .Level }} And The Value is : {{ index .Fields "ThreadCount" }}')
    //Email body as HTML
    .details('''
    <h1>{{ .ID }}</h1>
    <b>{{ .Message }}</b>
    <b><br> Note:  System alert message generated by Kapacitor</b>
    ''')
    .crit(lambda: "ThreadCount" > crit)
    .log('/tmp/tomcat_threads_count_alert_log.txt')
  //saving the alert data to database
  |influxDBOut()
    .database('alert_jmx_db')
    .retentionPolicy('autogen')
    .measurement('ThreadCount')
