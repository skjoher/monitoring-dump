var warn = 75
var crit = 85
var period = 1m
var every = 20s

// Dataframe
var data = stream
  |from()
    .database('telegraf_db')
    .retentionPolicy('autogen')
    .measurement('mem')
    .groupBy('host')
  |window()
    .period(period)
    .every(every)
  |mean('used_percent')
    .as('stat')

// Thresholds
var alert = data
  |eval(lambda: sigma("stat"))
    .as('sigma')
    .keep()
  |alert()
       .id('{{ .Name }}:{{ index .Tags "host"}}/mem_used')
       // Email subject
       .message('{{ .ID }} stat {{ .Level }} And The Value is : {{ index .Fields "stat" }}')
       //Email body as HTML
       .details('''
<h1>{{ .ID }}</h1>
<b>{{ .Message }}</b>
<b><br> Note:  System alert message generated by Kapacitor</b>
''')
	.warn(lambda: "stat" > warn)
	.crit(lambda: "stat" > crit)

// Alert
alert
  .log('/tmp/mem_alert_log.txt')
